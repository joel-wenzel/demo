<wsdl:definitions targetNamespace="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage_REQUEST" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns0="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage_REQUEST/types" xmlns:ns1="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage_REQUEST" xmlns:ns2="http://xmlns.oracle.com/cloud/generic/rest/fault/REST/PostMessage" xmlns="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/">  <wsdl:types>    <xs:schema elementFormDefault="qualified" targetNamespace="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage/types" nxsd:version="JSON" nxsd:encoding="UTF-8" xmlns="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd">      <xsd:element name="request-wrapper" nillable="true">        <xsd:complexType>          <xsd:sequence>            <xsd:element name="attachments" maxOccurs="unbounded" nillable="true">              <xsd:complexType>                <xsd:sequence>                  <xsd:element name="color" type="xsd:string" nillable="true"/>                  <xsd:element name="fields" maxOccurs="unbounded" nillable="true">                    <xsd:complexType>                      <xsd:sequence>                        <xsd:element name="short" type="xsd:boolean" nillable="true"/>                        <xsd:element name="title" type="xsd:string" nillable="true"/>                        <xsd:element name="value" type="xsd:string" nillable="true"/>                      </xsd:sequence>                    </xsd:complexType>                  </xsd:element>                </xsd:sequence>              </xsd:complexType>            </xsd:element>            <xsd:element name="blocks" maxOccurs="unbounded" nillable="true">              <xsd:complexType>                <xsd:sequence>                  <xsd:element name="text" minOccurs="0" nillable="true">                    <xsd:complexType>                      <xsd:sequence>                        <xsd:element name="text" type="xsd:string" nillable="true"/>                        <xsd:element name="type" type="xsd:string" nillable="true"/>                      </xsd:sequence>                    </xsd:complexType>                  </xsd:element>                  <xsd:element name="type" type="xsd:string" nillable="true"/>                  <xsd:element name="elements" maxOccurs="unbounded" nillable="true">                    <xsd:complexType>                      <xsd:sequence>                        <xsd:element name="action_id" type="xsd:string" nillable="true"/>                        <xsd:element name="text" nillable="true">                          <xsd:complexType>                            <xsd:sequence>                              <xsd:element name="text" type="xsd:string" nillable="true"/>                              <xsd:element name="emoji" type="xsd:boolean" nillable="true"/>                              <xsd:element name="type" type="xsd:string" nillable="true"/>                            </xsd:sequence>                          </xsd:complexType>                        </xsd:element>                        <xsd:element name="value" type="xsd:string" nillable="true"/>                        <xsd:element name="type" type="xsd:string" nillable="true"/>                      </xsd:sequence>                    </xsd:complexType>                  </xsd:element>                </xsd:sequence>              </xsd:complexType>            </xsd:element>            <xsd:element name="channel" type="xsd:string" nillable="true"/>          </xsd:sequence>        </xsd:complexType>      </xsd:element>    </xs:schema>    <xs:schema elementFormDefault="qualified" targetNamespace="http://xmlns.oracle.com/cloud/generic/rest/fault/REST/PostMessage" nxsd:version="JSON" nxsd:encoding="UTF-8" xmlns="http://xmlns.oracle.com/cloud/generic/rest/fault/REST/PostMessage" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd">      <xsd:element name="APIInvocationError">        <xsd:complexType>          <xsd:sequence>            <xsd:element name="type" type="xsd:string"/>            <xsd:element name="title" type="xsd:string"/>            <xsd:element name="detail" type="xsd:string"/>            <xsd:element name="errorCode" type="xsd:string"/>            <xsd:element name="errorDetails" maxOccurs="unbounded">              <xsd:complexType>                <xsd:sequence>                  <xsd:element name="type" type="xsd:string"/>                  <xsd:element name="instance" type="xsd:string"/>                  <xsd:element name="title" type="xsd:string"/>                  <xsd:element name="errorPath" type="xsd:string"/>                  <xsd:element name="errorCode" type="xsd:string"/>                </xsd:sequence>              </xsd:complexType>            </xsd:element>          </xsd:sequence>        </xsd:complexType>      </xsd:element>    </xs:schema>    <xs:schema elementFormDefault="qualified" targetNamespace="http://xmlns.oracle.com/cloud/adapter/connectivityproperties/REST/PostMessage_REQUEST/RESTOUTREQ" xmlns="http://xmlns.oracle.com/cloud/adapter/connectivityproperties/REST/PostMessage_REQUEST/RESTOUTREQ" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:connprop="http://xmlns.oracle.com/cloud/adapter/connectivityproperties">      <xs:element name="ConnectivityProperties">        <xs:complexType>          <xs:sequence>            <xs:element name="RestAPI" maxOccurs="1" minOccurs="0">              <xs:annotation>                <xs:documentation>Runtime properties for REST based endpoints. These properties can be used to dynamically configure the runtime behavior of REST based requests</xs:documentation>              </xs:annotation>              <xs:complexType>                <xs:sequence>                  <xs:choice>                    <xs:element type="xs:anyURI" name="AbsoluteEndpointURI" maxOccurs="1" minOccurs="0">                      <xs:annotation>                        <xs:documentation>Absolute URI. When mapped to a valid URI,the requests will be routed to this URI. If it is mapped, BaseUri,RelativeUri and Uri mappings, if any, will be ignored. Uri precedence order is 1) AbsoluteEndpointUri 2) BaseUri + RelativeUri 3) Uri</xs:documentation>                      </xs:annotation>                    </xs:element>                    <xs:element type="xs:anyURI" name="BaseURI" maxOccurs="1" minOccurs="0">                      <xs:annotation>                        <xs:documentation>Base URI where this request will be routed to. Equivalent of base connection URL provided during connection configuration. Must be mapped if RelativeUri is alo mapped. When RelativeUri is not mapped, corresponding value from endpoint configuration is used. Mapping have no impact if AbsoluteEndpointUri is also mapped and is not empty. Uri precedence order is 1) AbsoluteEndpointUri 2) BaseUri + RelativeUri 3) Uri.</xs:documentation>                      </xs:annotation>                    </xs:element>                    <xs:element type="xs:string" name="RelativeURI" maxOccurs="1" minOccurs="0">                      <xs:annotation>                        <xs:documentation>Relative URI of the resource. Must start with a "/". BaseUri must also be mapped and be non empty if this is mapped. The final endpoint URI is created by appending RelativeUri to BaseUri. Uri precedence order is 1) AbsoluteEndpointUri 2) BaseUri + RelativeUri 3) Uri.</xs:documentation>                      </xs:annotation>                    </xs:element>                    <xs:element name="URI" maxOccurs="1" minOccurs="0">                      <xs:annotation>                        <xs:documentation>Use one of the following to substitute URI components, from runtime values, in the target endpoint URI. These mappings will not have any impact if either of BaseUri or AbsoluteEndpointUri is also mapped and is not empty. Uri precedence order is 1) AbsoluteEndpointUri 2) BaseUri + RelativeUri 3) Uri</xs:documentation>                      </xs:annotation>                      <xs:complexType>                        <xs:sequence>                          <xs:element name="Scheme" maxOccurs="1" minOccurs="0">                            <xs:annotation>                              <xs:documentation>Protocol. Only HTTP or HTTPS is allowed</xs:documentation>                            </xs:annotation>                            <xs:simpleType>                              <xs:restriction base="xs:string">                                <xs:enumeration value="HTTP"/>                                <xs:enumeration value="HTTPS"/>                              </xs:restriction>                            </xs:simpleType>                          </xs:element>                          <xs:element type="xs:string" name="Host" maxOccurs="1" minOccurs="0">                            <xs:annotation>                              <xs:documentation>Host. Host this request will be routed to.</xs:documentation>                            </xs:annotation>                          </xs:element>                          <xs:element type="xs:integer" name="Port" maxOccurs="1" minOccurs="0">                            <xs:annotation>                              <xs:documentation>Port. Port of the URI this request will be routed to.</xs:documentation>                            </xs:annotation>                          </xs:element>                          <xs:element type="xs:string" name="Query" maxOccurs="1" minOccurs="0">                            <xs:annotation>                              <xs:documentation>Query String. The part of the URL that follows the "?". If the mapped value is non null, query string in the original URL will be substituted with the value determined at runtime.</xs:documentation>                            </xs:annotation>                          </xs:element>                          <xs:element type="xs:string" name="Path" maxOccurs="1" minOccurs="0">                            <xs:annotation>                              <xs:documentation>Path. The part of the URL between the hostname and "?".</xs:documentation>                            </xs:annotation>                          </xs:element>                        </xs:sequence>                      </xs:complexType>                    </xs:element>                  </xs:choice>                </xs:sequence>              </xs:complexType>            </xs:element>            <xs:element name="Plugin">              <xs:complexType>                <xs:sequence>                  <xs:element type="xs:boolean" name="PostQueryString" maxOccurs="1" minOccurs="0">                    <xs:annotation>                      <xs:documentation>Default False. When true, the fields in the query string (Query Parameters) will be sent as form data in request body.</xs:documentation>                    </xs:annotation>                  </xs:element>                  <xs:element type="xs:boolean" name="UseFormURLEncoding" maxOccurs="1" minOccurs="0">                    <xs:annotation>                      <xs:documentation>Default True. When false, ICS will follow RFC 3986 compliant encoding of the query string parameters. For REST APIs that are compliant                            with RFC 3986, space is expected to be encoded as %20 in the query string.</xs:documentation>                    </xs:annotation>                  </xs:element>                  <xs:element type="xs:boolean" name="EnforceEmptyJSONObjectPayload" maxOccurs="1" minOccurs="0">                    <xs:annotation>                      <xs:documentation>Default False. When true, will set body payload to an empty JSON object.</xs:documentation>                    </xs:annotation>                  </xs:element>                </xs:sequence>              </xs:complexType>            </xs:element>          </xs:sequence>        </xs:complexType>      </xs:element>    </xs:schema>    <xs:schema elementFormDefault="qualified" targetNamespace="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage_REQUEST/types" nxsd:version="JSON" nxsd:encoding="UTF-8" xmlns="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage_REQUEST/types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage/types" xmlns:connprop="http://xmlns.oracle.com/cloud/adapter/connectivityproperties" xmlns:ns4="http://xmlns.oracle.com/cloud/adapter/connectivityproperties/REST/PostMessage_REQUEST/RESTOUTREQ" xmlns:tns0="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage_REQUEST/types">      <xs:import namespace="http://xmlns.oracle.com/cloud/adapter/connectivityproperties/REST/PostMessage_REQUEST/RESTOUTREQ"/>      <xs:import namespace="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage/types"/>      <xs:element name="execute" type="tns0:executeType"/>      <xs:complexType name="executeType">        <xs:sequence>          <xs:element ref="ns3:request-wrapper"/>          <xs:element ref="ns4:ConnectivityProperties"/>        </xs:sequence>      </xs:complexType>      <xs:element name="executeResponse" type="tns0:executeResponseType"/>      <xs:complexType name="executeResponseType">        <xs:sequence/>      </xs:complexType>    </xs:schema>  </wsdl:types>  <wsdl:message name="executeRequestMessage">    <wsdl:part name="parameters" element="ns0:execute"/>  </wsdl:message>  <wsdl:message name="executeResponseMessage">    <wsdl:part name="parameters" element="ns0:executeResponse"/>  </wsdl:message>  <wsdl:message name="APIInvocationError">    <wsdl:part name="parameters" element="ns2:APIInvocationError"/>  </wsdl:message>  <wsdl:portType name="PostMessage_REQUESTPortType">    <wsdl:operation name="execute">      <cloud:CloudOperation targetOperation="execute" xmlns:cloud="http://xml.oracle.com/types"/>      <wsdl:input message="ns1:executeRequestMessage"/>      <wsdl:output message="ns1:executeResponseMessage"/>      <wsdl:fault name="APIInvocationError" message="ns1:APIInvocationError"/>    </wsdl:operation>  </wsdl:portType>  <wsdl:binding name="PostMessage_REQUESTPortType-binding" type="ns1:PostMessage_REQUESTPortType">    <binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>    <wsdl:operation name="execute">      <operation soapAction="http://xmlns.oracle.com/cloud/adapter/REST/PostMessage_REQUEST/execute"/>      <wsdl:input>        <body use="literal"/>      </wsdl:input>      <wsdl:output>        <body use="literal"/>      </wsdl:output>    </wsdl:operation>  </wsdl:binding>  <plnk:partnerLinkType name="postmessage_47_inbound_48">    <plnk:role name="PostMessage_REQUESTPortType">      <plnk:portType name="ns1:PostMessage_REQUESTPortType"/>    </plnk:role>  </plnk:partnerLinkType></wsdl:definitions>